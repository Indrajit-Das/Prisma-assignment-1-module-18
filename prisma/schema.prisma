// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
// user model 
model User{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  firstName String @db.VarChar(50)
  middleName String @db.VarChar(50)
  lastName String @db.VarChar(50)
  mobile String @db.VarChar(15)
  email String @db.VarChar(50)
  passwordHash String @db.VarChar(32)
  registeredAt DateTime @default(now()) @db.Timestamp(0)
  lastLogin DateTime @default(now()) @db.Timestamp(0)
  intro String @db.TinyText
  profile String @db.Text
  
 
  post Post[]
}
// post model
model Post{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  authorId BigInt @db.UnsignedBigInt
  parentId BigInt @db.UnsignedBigInt
  title String @db.VarChar(75)
  metaTitle String @db.VarChar(100)
  slug String @db.VarChar(100)
  summary String @db.TinyText
  published Int @db.TinyInt
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @default(now()) @db.Timestamp(0)
  publishedAt DateTime @default(now()) @db.Timestamp(0)
  content String @db.Text
  
  userId BigInt @unique @db.UnsignedBigInt
  user User @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  
  post_comment Post_Comment[]
  post_meta Post_Meta[]
  post_category Post_Category[]
  post_tag Post_Tag[]
}
// post comment model 
model Post_Comment{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  postId BigInt @unique @db.UnsignedBigInt
  parentId BigInt 
  title String @db.VarChar(100)
  published Int @db.TinyInt
  createdAt DateTime @default(now()) @db.Timestamp(0)
  publishedAt DateTime @default(now()) @db.Timestamp(0)
  content String @db.Text
  
  post Post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate: Cascade)
}
// post meta 
model Post_Meta{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  postId BigInt @unique @db.UnsignedBigInt
  key String @db.VarChar(50)
  content String @db.Text

  post Post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate: Cascade)
}

// post category
model Post_Category{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  postId BigInt @unique @db.UnsignedBigInt
  categoryId BigInt @unique @db.UnsignedBigInt
  post Post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  category Category @relation(fields: [categoryId],references: [id],onDelete: Restrict,onUpdate: Cascade)
}

// category model
model Category{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  parentId BigInt @db.UnsignedBigInt
  title String @db.VarChar(75)
  metaTitle String @db.VarChar(100)
  slug String @db.VarChar(100)
  content String @db.Text
  post_category Post_Category[]
}

// tag
model Tag{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  title String @db.VarChar(75)
  metaTitle String @db.VarChar(100)
  slug String @db.VarChar(100)
  content String @db.Text

  post_tag Post_Tag[]
}
// post tag model
model Post_Tag{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  postId BigInt @unique @db.UnsignedBigInt
  tagId BigInt @unique @db.UnsignedBigInt

  post Post @relation(fields: [postId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  tag Tag @relation(fields: [tagId],references: [id],onDelete: Restrict,onUpdate: Cascade)
}